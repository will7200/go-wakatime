// Code generated by go-swagger; DO NOT EDIT.

package user_agents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/will7200/wakatime/models"
)

// CurrentUserAgentsReader is a Reader for the CurrentUserAgents structure.
type CurrentUserAgentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CurrentUserAgentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCurrentUserAgentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewCurrentUserAgentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCurrentUserAgentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCurrentUserAgentsOK creates a CurrentUserAgentsOK with default headers values
func NewCurrentUserAgentsOK() *CurrentUserAgentsOK {
	return &CurrentUserAgentsOK{}
}

/*CurrentUserAgentsOK handles this case with default header values.

List of plugins.
*/
type CurrentUserAgentsOK struct {
	Payload *CurrentUserAgentsOKBody
}

func (o *CurrentUserAgentsOK) Error() string {
	return fmt.Sprintf("[GET /users/current/user_agents][%d] currentUserAgentsOK  %+v", 200, o.Payload)
}

func (o *CurrentUserAgentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CurrentUserAgentsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCurrentUserAgentsUnauthorized creates a CurrentUserAgentsUnauthorized with default headers values
func NewCurrentUserAgentsUnauthorized() *CurrentUserAgentsUnauthorized {
	return &CurrentUserAgentsUnauthorized{}
}

/*CurrentUserAgentsUnauthorized handles this case with default header values.

The request requires authentication, or your authentication was invalid.
*/
type CurrentUserAgentsUnauthorized struct {
	Payload *models.Error
}

func (o *CurrentUserAgentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/current/user_agents][%d] currentUserAgentsUnauthorized  %+v", 401, o.Payload)
}

func (o *CurrentUserAgentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCurrentUserAgentsNotFound creates a CurrentUserAgentsNotFound with default headers values
func NewCurrentUserAgentsNotFound() *CurrentUserAgentsNotFound {
	return &CurrentUserAgentsNotFound{}
}

/*CurrentUserAgentsNotFound handles this case with default header values.

The resource does not exist.
*/
type CurrentUserAgentsNotFound struct {
}

func (o *CurrentUserAgentsNotFound) Error() string {
	return fmt.Sprintf("[GET /users/current/user_agents][%d] currentUserAgentsNotFound ", 404)
}

func (o *CurrentUserAgentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*CurrentUserAgentsOKBody current user agents o k body
swagger:model CurrentUserAgentsOKBody
*/
type CurrentUserAgentsOKBody struct {

	// data
	Data []*models.UserAgents `json:"data"`
}

// Validate validates this current user agents o k body
func (o *CurrentUserAgentsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CurrentUserAgentsOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("currentUserAgentsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CurrentUserAgentsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CurrentUserAgentsOKBody) UnmarshalBinary(b []byte) error {
	var res CurrentUserAgentsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
