// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/will7200/wakatime/models"
)

// ProjectsReader is a Reader for the Projects structure.
type ProjectsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProjectsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewProjectsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewProjectsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProjectsOK creates a ProjectsOK with default headers values
func NewProjectsOK() *ProjectsOK {
	return &ProjectsOK{}
}

/*ProjectsOK handles this case with default header values.

The request has succeeded.
*/
type ProjectsOK struct {
	Payload *models.Projects
}

func (o *ProjectsOK) Error() string {
	return fmt.Sprintf("[GET /users/{user}/projects][%d] projectsOK  %+v", 200, o.Payload)
}

func (o *ProjectsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Projects)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsUnauthorized creates a ProjectsUnauthorized with default headers values
func NewProjectsUnauthorized() *ProjectsUnauthorized {
	return &ProjectsUnauthorized{}
}

/*ProjectsUnauthorized handles this case with default header values.

The request requires authentication, or your authentication was invalid.
*/
type ProjectsUnauthorized struct {
	Payload *models.Error
}

func (o *ProjectsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{user}/projects][%d] projectsUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsNotFound creates a ProjectsNotFound with default headers values
func NewProjectsNotFound() *ProjectsNotFound {
	return &ProjectsNotFound{}
}

/*ProjectsNotFound handles this case with default header values.

The resource does not exist.
*/
type ProjectsNotFound struct {
}

func (o *ProjectsNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{user}/projects][%d] projectsNotFound ", 404)
}

func (o *ProjectsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
