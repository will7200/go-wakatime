// Code generated by go-swagger; DO NOT EDIT.

package stats

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/will7200/wakatime/models"
)

// GetUserStatsReader is a Reader for the GetUserStats structure.
type GetUserStatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserStatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUserStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetUserStatsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUserStatsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUserStatsOK creates a GetUserStatsOK with default headers values
func NewGetUserStatsOK() *GetUserStatsOK {
	return &GetUserStatsOK{}
}

/*GetUserStatsOK handles this case with default header values.

Statistical Coding Activity
*/
type GetUserStatsOK struct {
	Payload *GetUserStatsOKBody
}

func (o *GetUserStatsOK) Error() string {
	return fmt.Sprintf("[GET /users/{user}/stats/{range}][%d] getUserStatsOK  %+v", 200, o.Payload)
}

func (o *GetUserStatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUserStatsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserStatsUnauthorized creates a GetUserStatsUnauthorized with default headers values
func NewGetUserStatsUnauthorized() *GetUserStatsUnauthorized {
	return &GetUserStatsUnauthorized{}
}

/*GetUserStatsUnauthorized handles this case with default header values.

The request requires authentication, or your authentication was invalid.
*/
type GetUserStatsUnauthorized struct {
	Payload *models.Error
}

func (o *GetUserStatsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{user}/stats/{range}][%d] getUserStatsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserStatsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserStatsNotFound creates a GetUserStatsNotFound with default headers values
func NewGetUserStatsNotFound() *GetUserStatsNotFound {
	return &GetUserStatsNotFound{}
}

/*GetUserStatsNotFound handles this case with default header values.

The resource does not exist.
*/
type GetUserStatsNotFound struct {
}

func (o *GetUserStatsNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{user}/stats/{range}][%d] getUserStatsNotFound ", 404)
}

func (o *GetUserStatsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetUserStatsOKBody get user stats o k body
swagger:model GetUserStatsOKBody
*/
type GetUserStatsOKBody struct {

	// data
	Data *models.Stats `json:"data,omitempty"`
}

// Validate validates this get user stats o k body
func (o *GetUserStatsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUserStatsOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getUserStatsOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUserStatsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserStatsOKBody) UnmarshalBinary(b []byte) error {
	var res GetUserStatsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
