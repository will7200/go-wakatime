// Code generated by go-swagger; DO NOT EDIT.

package stats

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/will7200/wakatime/models"
)

// CurrentUserStatsReader is a Reader for the CurrentUserStats structure.
type CurrentUserStatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CurrentUserStatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCurrentUserStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewCurrentUserStatsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCurrentUserStatsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCurrentUserStatsOK creates a CurrentUserStatsOK with default headers values
func NewCurrentUserStatsOK() *CurrentUserStatsOK {
	return &CurrentUserStatsOK{}
}

/*CurrentUserStatsOK handles this case with default header values.

Statistical Coding Activity
*/
type CurrentUserStatsOK struct {
	Payload *CurrentUserStatsOKBody
}

func (o *CurrentUserStatsOK) Error() string {
	return fmt.Sprintf("[GET /users/current/stats/{range}][%d] currentUserStatsOK  %+v", 200, o.Payload)
}

func (o *CurrentUserStatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CurrentUserStatsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCurrentUserStatsUnauthorized creates a CurrentUserStatsUnauthorized with default headers values
func NewCurrentUserStatsUnauthorized() *CurrentUserStatsUnauthorized {
	return &CurrentUserStatsUnauthorized{}
}

/*CurrentUserStatsUnauthorized handles this case with default header values.

The request requires authentication, or your authentication was invalid.
*/
type CurrentUserStatsUnauthorized struct {
	Payload *models.Error
}

func (o *CurrentUserStatsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/current/stats/{range}][%d] currentUserStatsUnauthorized  %+v", 401, o.Payload)
}

func (o *CurrentUserStatsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCurrentUserStatsNotFound creates a CurrentUserStatsNotFound with default headers values
func NewCurrentUserStatsNotFound() *CurrentUserStatsNotFound {
	return &CurrentUserStatsNotFound{}
}

/*CurrentUserStatsNotFound handles this case with default header values.

The resource does not exist.
*/
type CurrentUserStatsNotFound struct {
}

func (o *CurrentUserStatsNotFound) Error() string {
	return fmt.Sprintf("[GET /users/current/stats/{range}][%d] currentUserStatsNotFound ", 404)
}

func (o *CurrentUserStatsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*CurrentUserStatsOKBody current user stats o k body
swagger:model CurrentUserStatsOKBody
*/
type CurrentUserStatsOKBody struct {

	// data
	Data *models.Stats `json:"data,omitempty"`
}

// Validate validates this current user stats o k body
func (o *CurrentUserStatsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CurrentUserStatsOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("currentUserStatsOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CurrentUserStatsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CurrentUserStatsOKBody) UnmarshalBinary(b []byte) error {
	var res CurrentUserStatsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
